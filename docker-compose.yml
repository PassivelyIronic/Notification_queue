services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  mongo:
    image: mongo:6
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: notification_manager
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "3100:3100"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb://root:example@mongo:27017/notification_manager
    depends_on:
      - redis
      - mongo
    networks:
      - app-network
    command: python -m src.index

  push-worker:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - app-network
    command: python -m sim.push_worker

  email-worker:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - app-network
    command: python -m sim.mail_worker

volumes:
  redis_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
